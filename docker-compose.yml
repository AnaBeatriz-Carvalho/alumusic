version: '3.9'

services:
  api:
    build: .
    container_name: alumusic_api
    ports:
      - "5001:5000"
    env_file:
      - .env
    command: >
      sh -c "flask db upgrade && gunicorn --bind 0.0.0.0:5000 'app:create_app()'"
    depends_on:
      alumusic:
        condition: service_healthy
      redis:
        condition: service_healthy

  worker:
    build: .
    container_name: alumusic_worker

    command: celery -A app.celery_app.celery worker --loglevel=info
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
      alumusic:
        condition: service_healthy

  alumusic:
    image: postgres:16
    container_name: alumusic
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432" 
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: alumusic_redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
  streamlit:
    build: .
    container_name: alumusic_front
    working_dir: /app
    ports:
      - "8501:8501"
    command: streamlit run app/streamlit_app.py --server.port 8501 --server.address 0.0.0.0
    depends_on:
      - api
volumes:
  postgres_data:
