services:
  api:
    build: .
    image: alumusic-app
    container_name: alumusic_api
    restart: unless-stopped
    ports:
      - "5001:5000"
    env_file:
      - .env
    environment:
      - FLASK_APP=app
    command: >
      sh -c "gunicorn --bind 0.0.0.0:5000 'app:create_app()'"
    depends_on:
      migrate:
        condition: service_completed_successfully

  migrate:
    image: alumusic-app
    container_name: alumusic_migrate
    env_file:
      - .env
    command: sh -c "flask db upgrade"
    depends_on:
      alumusic:
        condition: service_healthy

  worker:
    image: alumusic-app
    container_name: alumusic_worker
    restart: unless-stopped
    command: celery -A celery_worker.celery worker --loglevel=info
    env_file:
      - .env
    depends_on:
      migrate:
        condition: service_completed_successfully
      redis:
        condition: service_healthy

  beat:
    image: alumusic-app
    container_name: alumusic_beat
    restart: unless-stopped
    command: celery -A celery_beat.celery beat --loglevel=info
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
      alumusic:
        condition: service_healthy

  streamlit:
    image: alumusic-app
    container_name: alumusic_front
    restart: unless-stopped
    ports:
      - "8501:8501"
    env_file:
      - .env
    command: streamlit run streamlit_app.py --server.port 8501 --server.address 0.0.0.0
    depends_on:
      api:
        condition: service_started

  mailhog:
    image: mailhog/mailhog
    container_name: alumusic_mailhog
    restart: unless-stopped
    ports:
      - "1025:1025" 
      - "8025:8025"

  alumusic:
    image: postgres:16
    container_name: alumusic
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: alumusic_redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:




